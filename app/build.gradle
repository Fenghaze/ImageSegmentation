apply plugin: 'com.android.application'
repositories {
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"
    ndkVersion "21.0.6113669"

    defaultConfig {
        applicationId "org.pytorch.demo.imagesegmentation"
        minSdkVersion 28
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags '-std=c++11'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    implementation 'org.jetbrains:annotations:15.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'org.pytorch:pytorch_android:1.7.0'
    implementation 'org.pytorch:pytorch_android_torchvision:1.4.0'
//    def camerax_version = "1.0.0-beta03"
//    implementation "androidx.camera:camera-core:$camerax_version"
//    implementation "androidx.camera:camera-camera2:$camerax_version"
//    implementation "androidx.camera:camera-lifecycle:$camerax_version"
//    implementation "androidx.camera:camera-view:1.0.0-alpha10"
    def camerax_version = "1.0.0-alpha05"
    implementation "androidx.camera:camera-core:$camerax_version"
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation project("::Opencv")
}